/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pkg2012440027;

import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.swing.text.Document;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import org.apache.activemq.ActiveMQConnectionFactory;
import tag.atsc_org_2016.xmlschemas.atsc3.delivery.aeat._1.AEATType;
import tag.atsc_org_2016.xmlschemas.atsc3.delivery.aeat._1.AEAType;


/**
 *
 * @author jaejunk
 */
public class AEATJFrame extends javax.swing.JFrame {

    private AEAPanel aeaPanel;
    private AEATextPanel aeaText;
    private EventPanel eventPanel;
    private HeaderPanel header;
    private LiveMediaPanel liveMedia;
    private LocationPanel location;
    private MediaPanel media;
    
    private Connection connection;
    public static final String AEAT_EXAM = "xml/AEAT-Example-20170920.xml";
    public static final String AEAT_XML_SCHEMA = "xmlSchema/AEAT-1.0-20170920.xsd";
    
    String DESTIANTION_EXAM = "Lipton.ruby"; // 데스티네이션 이름
    //String MQ_ADDRESS = "tcp://172.16.162.203:61616"; // 메시지 브로커 주소
    String MQ_ADDRESS = "vm://localhost";
    
    /** Creates new form AEATJFrame */
    public AEATJFrame() {
        
        initComponents();
        
        receiveMessage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainPanel2 = new pkg2012440027.MainPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(mainPanel2);

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadOnClick(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveOnClick(evt);
            }
        });

        jButton3.setText("Send");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendOnClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addGap(67, 67, 67)
                .addComponent(jButton2)
                .addGap(66, 66, 66)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //함수명 : sendMessage
    //입력 : String
    //출력 : 없음
    //message를 입력으로 받아 ActiveMQProducer를 이용해 message를 전달한다
    private void sendMessage(String message) {
        try {
            ActiveMQProducer producer = new ActiveMQProducer(MQ_ADDRESS);
            producer.sendMessageTo(message, DESTIANTION_EXAM);
        
            Thread.sleep(2000);
            producer.closeConnection();
        } catch (InterruptedException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }
    //함수명 : saveOnClick
    //입력 : ActionEvnet
    //출력 : 없음
    //GUI에 입력한 데이터를 xml로 저장, save 버튼을 클릭했을 때 실행
    private void saveOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveOnClick
        // TODO add your handling code here:
        AEATType aeat = new AEATType(); //AEATType 객체 생성
        //AEAType aea = new AEAType();
        
        //aea = aeaPanel.saveAEA();
        //aeat.getAEA().add(aea);
        
        aeat = mainPanel2.setAEAT(aeat); //MainPanel class의 setAEAT method 호출, AEATType 객체에 데이터 저장
        
        aeatMarshalling(aeat, AEAT_EXAM); //aeat의 정보로 marshalling
    }//GEN-LAST:event_saveOnClick

    //함수명 : loadOnClick
    //입력 : ActionEvent
    //출력 : 없음
    //xml의 데이터를 GUI에 입력, load 버튼을 클릭 했을 때 실행
    private void loadOnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadOnClick
        // TODO add your handling code here:
        AEATType aeat = aeatUnmarshalling(AEAT_EXAM); //unmarshalling 하여 aeat 객체 초기화
        
        mainPanel2.loadAEAT(aeat); //MainPanel class의 loadAEAT method 호출
    }//GEN-LAST:event_loadOnClick
    
    //함수명 : aeatToXml
    //입력 : AEATType
    //출력 : String
    //xml 데이터를 string으로 convert
    public static String aeatToXml(AEATType aeat) {
        String result = "";
        try {
            JAXBContext jaxbContext = JAXBContext.newInstance(AEATType.class);
            Marshaller marshaller = jaxbContext.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            //AEATType 객체를 "path" 경로에 파일로 저장
            StringWriter stringWriter = new StringWriter();
            marshaller.marshal(aeat, stringWriter);
            result = stringWriter.toString();
            
            //System.out.println("Received Message:\n" + result);
        } catch (JAXBException e) {
            e.printStackTrace();
        }
        return result;
    }
    
    //함수명 : stringToAEAT
    //입력 : String
    //출력 : 없음
    //입력으로 받은 string을 xml로 변환
    public void stringToAEAT(String receivedString) {
        AEATType aeat = null;
        try {
            JAXBContext jaxbContext = JAXBContext.newInstance(AEATType.class); //JAXBContext 객체 생성 
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller(); //Unmarshaller 객체 생성
            //aeat = (AEATType) ((JAXBElement) jaxbUnmarshaller.unmarshal(file)).getValue(); //AEATType 객체에 xml 정보 저장
            aeat = (AEATType) ((JAXBElement) jaxbUnmarshaller.unmarshal(new StringReader(receivedString))).getValue();
            mainPanel2.loadAEAT(aeat);
        } catch (JAXBException e) { //unmarshalling error 시 처리
            e.printStackTrace();
        }
    }
    
    //함수명 : sendOnClicked
    //입력 : ActionEvent
    //출력 : 없음
    //send 버튼을 눌렀을 때의 동작, xml을 message로 보냄
    private void sendOnClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendOnClicked
//        // TODO add your handling code here:
        try {
            ActiveMQProducer producer = new ActiveMQProducer(MQ_ADDRESS);
            AEATType aeat = new AEATType(); //AEATType 객체 생성
        
//            aeat = mainPanel2.setAEAT(aeat); //MainPanel class의 setAEAT method 호출, AEATType 객체에 데이터 저장
            aeat = aeatUnmarshalling(AEAT_EXAM);
            
            producer.sendMessageTo(aeatToXml(aeat), DESTIANTION_EXAM);
//            producer.sendMessageTo("qwqqwqw", DESTIANTION_EXAM);
        
            Thread.sleep(2000);
            producer.closeConnection();
        } catch (InterruptedException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendOnClicked

    //함수명 : reveiveMessage
    //입력 : 없음
    //출력 : 없음
    //메세지를 받았을 때 받은 메세지를 화면에 출력
    private void receiveMessage() {
        ActiveMQConsumer consumer = new ActiveMQConsumer();
        try {
            // Create a ConnectionFactory
            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(MQ_ADDRESS);

            // Create a Connection
            this.connection = connectionFactory.createConnection();
            connection.start();

            connection.setExceptionListener(consumer);
        } catch (JMSException e) {
            System.out.println("Caught: " + e);
            e.printStackTrace();
        }

        try {
            // Create a Session
            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);

            // Create the destination (Topic or Queue)
            Destination destination = session.createQueue(DESTIANTION_EXAM);

            // Create a MessageConsumer from the Session to the Topic or Queue
            MessageConsumer mConsumer = session.createConsumer(destination);

            // Wait for a message
            MessageListener listener = new MessageListener() {
                public void onMessage(Message message) {
                    if (message instanceof TextMessage) {
                        TextMessage textMessage = (TextMessage) message;
                        try {
                            System.out.println("Received Message:\n" + textMessage.getText());
                            setMessageToTextArea(textMessage.getText());
                            stringToAEAT(textMessage.getText());
                        } catch (JMSException e) {
                            e.printStackTrace();
                        }
                    }
                }
            };
            // Register to MessageListener
            mConsumer.setMessageListener(listener);
        } catch (JMSException ex) {
            Logger.getLogger(ActiveMQConsumer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //함수명 : setMessageToTextArea
    //입력 : String
    //출력 : 없음
    //mainPanel에게 메세지를 전달하여 화면에 message가 출력 되도록 한다
    public void setMessageToTextArea(String message) {
        mainPanel2.setMessageToMessagePanel(message);
    }
    
    //함수명 : aeatMarsahlling
    //입력 : AEATType, String
    //출력 : 없음
    //입력 받은 데이터를 xml file로 저장
    private void aeatMarshalling(AEATType aeat, String path) {
        try {
            JAXBContext jaxbContext = JAXBContext.newInstance(AEATType.class); //JAXBContext 객체 생성
            Marshaller marshaller = jaxbContext.createMarshaller(); //Marshaller 객체 생성
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true); //marshaller property 설정
            
            marshaller.marshal(aeat, new File(path)); //xml file 저장
        } catch (JAXBException e) {//marshalling error 시 처리
            e.printStackTrace();
        }
    }
    
    //함수명 : aeatUnmarshalling
    //입력 : String
    //출력 : AEATType
    //xml 파일을 읽어 unmarshalling 하는 method
    private AEATType aeatUnmarshalling(String path) {
        AEATType aeat = null;
        try {
            File file = new File(path); //저장된 xml file을 읽는다

            JAXBContext jaxbContext = JAXBContext.newInstance(AEATType.class); //JAXBContext 객체 생성 
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller(); //Unmarshaller 객체 생성
            aeat = (AEATType) ((JAXBElement) jaxbUnmarshaller.unmarshal(file)).getValue(); //AEATType 객체에 xml 정보 저장
        } catch (JAXBException e) { //unmarshalling error 시 처리
            e.printStackTrace();
        }
        return aeat;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AEATJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AEATJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AEATJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AEATJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AEATJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private pkg2012440027.MainPanel mainPanel2;
    // End of variables declaration//GEN-END:variables

    
}
